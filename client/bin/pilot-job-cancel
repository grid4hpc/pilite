#!/usr/bin/perl

use strict;
use warnings;
use POSIX;
use JSON;
use PilotCheckParams;

my $fdlog;
my $pilite_user_name = PilotCheckParams::get_current_pilite_user(1, \@ARGV);

### Get parameters that are needed for work
my $results = PilotCheckParams::check_params();

### Check if a job definition is defined
my $job_id = $ARGV[0];
if ((not defined $job_id) or (not length $job_id)) {
    open($fdlog, ">>", $results->{full_pilite_log_file});
    print $fdlog strftime("%Y-%m-%d %H:%M:%S", localtime(time))." $pilite_user_name: pilot-job-cancel: ERROR:\n";
    print $fdlog "  Usage: pilot-job-cancel ID ...\n\n";
    print $fdlog "  Cancel job by ID.\n";
    close($fdlog);
    exit 1;
}

### Return if needed params are not set
if ((not exists $results->{success}) or (not defined $results->{success}) or ($results->{success} != 1)) {
    open($fdlog, ">>", $results->{full_pilite_log_file});
    print $fdlog strftime("%Y-%m-%d %H:%M:%S", localtime(time))." $pilite_user_name: pilot-job-cancel $job_id: ERROR: Global params are not set\n";
    close($fdlog);
    exit 1;
}

    ### Get the job execution status
    my $executable_status = $results->{local_script_dir}.'/pilot-job-status';
    
    my $job_status=qx(${executable_status} $job_id $pilite_user_name);
    chomp($job_status);
    if ($job_status ne 'Running') {
        open($fdlog, ">>", $results->{full_pilite_log_file});
        print $fdlog strftime("%Y-%m-%d %H:%M:%S", localtime(time))." $pilite_user_name: pilot-job-cancel $job_id: WARNING: Job is not in the RUNNING state.\n";
        print $fdlog "  The current state is: $job_status\n";
        close($fdlog);
        print STDOUT "The job is not in the RUNNING state!\n";
        exit 1;
    }  

    ### Cancel the job
    my $remote_executable_cancel = $results->{remote_script_dir}.'/job_cancel.pl';
    my $result = qx($results->{ssh_exec} -i $results->{path_to_key_file} $results->{remote_user_name}\@$results->{remote_host_name} ${remote_executable_cancel} $job_id $pilite_user_name);
    open($fdlog, ">>", $results->{full_pilite_log_file});
    print $fdlog strftime("%Y-%m-%d %H:%M:%S", localtime(time))." $pilite_user_name: pilot-job-cancel $job_id $result\n";
    close($fdlog);
    print STDOUT $result."\n";

    ### Cleanup the job temporary dir
    my $executable_cleanup = $results->{local_script_dir}.'/pilot-job-cleanup';
    my $job_cleanup_result=qx(${executable_cleanup} $job_id $pilite_user_name);

    exit 0;
